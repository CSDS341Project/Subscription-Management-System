{"version":3,"sources":["logo.svg","socketConfig.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["ws","openSocket","LoginPage","state","username","password","er","handleUserChange","bind","handlePassChange","handleSubmit","ignoreError","evt","preventDefault","this","emit","command","target","value","setState","className","onSubmit","onClick","TextField","type","label","variant","onChange","Button","Component","App","on","message","console","log","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,G,MAAA,IAA0B,kC,0ECI1BA,EAFJC,YAAW,4B,OC2ELC,E,kDAvEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVC,GAAI,IAGN,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBAXP,E,gDAcd,SAAaI,GAGX,OAFAA,EAAIC,iBAECC,KAAKX,MAAMC,SAIXU,KAAKX,MAAME,cAIhBL,EAAGe,KAAK,OAAQ,CAACC,QAAS,QACFZ,SAAUQ,EAAIK,OAAO,GAAGC,MACxBb,SAAUO,EAAIK,OAAO,GAAGC,QALvCJ,KAAKK,SAAS,CAAEb,GAAI,+BAJpBQ,KAAKK,SAAS,CAAEb,GAAI,iC,8BAa/B,SAAiBM,GACfE,KAAKK,SAAS,CACZf,SAAUQ,EAAIK,OAAOC,U,8BAIzB,SAAiBN,GACfE,KAAKK,SAAS,CACZd,SAAUO,EAAIK,OAAOC,U,yBAIzB,WACEJ,KAAKK,SAAS,CAAEb,GAAI,O,oBAGtB,WAEE,OACE,qBAAKc,UAAU,QAAf,SACE,uBAAMC,SAAUP,KAAKJ,aAArB,UAEII,KAAKX,MAAMG,IACX,qBAAI,YAAU,KAAKgB,QAASR,KAAKH,YAAjC,UACE,wBAAQW,QAASR,KAAKH,YAAtB,oBACCG,KAAKX,MAAMG,MAGhB,cAACiB,EAAA,EAAD,CAAWC,KAAK,OAAOC,MAAM,WAAWC,QAAQ,SAAS,YAAU,WAAWR,MAAOJ,KAAKX,MAAMC,SAAUuB,SAAUb,KAAKP,mBAEzH,cAACgB,EAAA,EAAD,CAAWC,KAAK,WAAWC,MAAM,WAAWC,QAAQ,SAAS,YAAU,WAAWR,MAAOJ,KAAKX,MAAME,SAAUsB,SAAUb,KAAKL,mBAE7H,cAACmB,EAAA,EAAD,CAAQF,QAAQ,YAAYF,KAAK,SAASN,MAAM,SAAS,YAAU,SAAnE,6B,GAhEYW,aCsBTC,MAvBf,WAYE,OAXA9B,EAAG+B,GAAG,WAAW,SAASC,GACC,eAArBA,EAAO,OAITC,QAAQC,IAAI,oBAOd,qBAAKd,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKe,IAAKC,EAAMhB,UAAU,WAAWiB,IAAI,SACzC,cAAC,EAAD,UCROC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6af29cab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import openSocket from 'socket.io-client';\n\nconst ws = openSocket('ws://18.220.211.136:5000');\n\nexport default ws;","import React, {Component} from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport ws from \"./socketConfig\"\n\nclass LoginPage extends Component {\n    constructor() {\n      super();\n      this.state = {\n        username: '',\n        password: '',\n        er: '',\n      };\n  \n      this.handleUserChange = this.handleUserChange.bind(this);\n      this.handlePassChange = this.handlePassChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.ignoreError = this.ignoreError.bind(this);\n    }\n  \n    handleSubmit(evt) {\n      evt.preventDefault();\n  \n      if (!this.state.username) {\n        return this.setState({ er: 'Please Enter Your Username' });\n      }\n  \n      if (!this.state.password) {\n        return this.setState({ er: 'Please Enter Your Password' });\n      }\n\n      ws.emit('json', {command: \"login\",\n                              username: evt.target[0].value,\n                              password: evt.target[1].value});\n  \n    }\n  \n    handleUserChange(evt) {\n      this.setState({\n        username: evt.target.value,\n      });\n    };\n  \n    handlePassChange(evt) {\n      this.setState({\n        password: evt.target.value,\n      });\n    }\n  \n    ignoreError() {\n      this.setState({ er: '' });\n    }\n  \n    render() {\n  \n      return (\n        <div className=\"Login\">\n          <form onSubmit={this.handleSubmit}>\n            {\n              this.state.er &&\n              <h3 data-test=\"er\" onClick={this.ignoreError}>\n                <button onClick={this.ignoreError}>âœ–</button>\n                {this.state.er}\n              </h3>\n            }\n            <TextField type=\"text\" label=\"username\" variant=\"filled\" data-test=\"username\" value={this.state.username} onChange={this.handleUserChange} />\n  \n            <TextField type=\"password\" label=\"password\" variant=\"filled\" data-test=\"password\" value={this.state.password} onChange={this.handlePassChange} />\n  \n            <Button variant=\"contained\" type=\"submit\" value=\"Log In\" data-test=\"submit\" >Log In</Button>\n          </form>\n  \n        </div>\n      );\n    }\n  }\n  \n  export default LoginPage;","import logo from './logo.svg';\nimport './App.css';\nimport LoginPage from './login';\nimport ws from './socketConfig'\nfunction App() {\n  ws.on('message', function(message) {\n    if (message['login'] === 'successful') {\n      \n    }\n    else {\n      console.log(\"Login failed.\")\n    }\n  });\n\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <LoginPage></LoginPage>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}