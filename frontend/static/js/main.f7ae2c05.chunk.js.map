{"version":3,"sources":["login.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","state","username","password","error","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","this","setState","evt","preventDefault","target","value","className","onSubmit","onClick","TextField","type","label","variant","onChange","Button","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA8EeA,E,kDAtEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVC,MAAO,IAGT,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBAXR,E,gDAcd,WACEI,KAAKC,SAAS,CAAEP,MAAO,O,0BAGzB,SAAaQ,GAGX,OAFAA,EAAIC,iBAECH,KAAKT,MAAMC,SAIXQ,KAAKT,MAAME,SAITO,KAAKC,SAAS,CAAEP,MAAO,KAHrBM,KAAKC,SAAS,CAAEP,MAAO,yBAJvBM,KAAKC,SAAS,CAAEP,MAAO,2B,8BAUlC,SAAiBQ,GACfF,KAAKC,SAAS,CACZT,SAAUU,EAAIE,OAAOC,U,8BAIzB,SAAiBH,GACfF,KAAKC,SAAS,CACZR,SAAUS,EAAIE,OAAOC,U,oBAIzB,WAIE,OACE,qBAAKC,UAAU,QAAf,SACE,uBAAMC,SAAUP,KAAKF,aAArB,UAEIE,KAAKT,MAAMG,OACX,qBAAI,YAAU,QAAQc,QAASR,KAAKD,aAApC,UACE,wBAAQS,QAASR,KAAKD,aAAtB,oBACCC,KAAKT,MAAMG,SAGhB,cAACe,EAAA,EAAD,CAAWC,KAAK,OAAOC,MAAM,WAAWC,QAAQ,SAAS,YAAU,WAAWP,MAAOL,KAAKT,MAAMC,SAAUqB,SAAUb,KAAKH,mBAEzH,cAACY,EAAA,EAAD,CAAWC,KAAK,WAAWC,MAAM,WAAWC,QAAQ,SAAS,YAAU,WAAWP,MAAOL,KAAKT,MAAME,SAAUoB,SAAUb,KAAKL,mBAE7H,cAACmB,EAAA,EAAD,CAAQF,QAAQ,YAAYF,KAAK,SAASL,MAAM,SAAS,YAAU,SAAnE,6B,GA/DcU,aCWTC,MAbf,WAEE,OACE,qBAAKV,UAAU,MAAf,SACE,gDAEA,cAAC,EAAD,UCCSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7ae2c05.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\n\n\nclass LoginPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      error: '',\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: '' });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    if (!this.state.username) {\n      return this.setState({ error: 'Username is required' });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: 'Password is required' });\n    }\n\n    return this.setState({ error: '' });\n  }\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value,\n    });\n  };\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value,\n    });\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          {\n            this.state.error &&\n            <h3 data-test=\"error\" onClick={this.dismissError}>\n              <button onClick={this.dismissError}>âœ–</button>\n              {this.state.error}\n            </h3>\n          }\n          <TextField type=\"text\" label=\"username\" variant=\"filled\" data-test=\"username\" value={this.state.username} onChange={this.handleUserChange} />\n\n          <TextField type=\"password\" label=\"password\" variant=\"filled\" data-test=\"password\" value={this.state.password} onChange={this.handlePassChange} />\n\n          <Button variant=\"contained\" type=\"submit\" value=\"Log In\" data-test=\"submit\" >Log In</Button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;","import './App.css';\nimport * as React from 'react';\nimport LoginPage from './login';\nimport { BrowserRouter, Routes, Route, NavLink } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Welcome to SMS\n      <LoginPage />\n      </h1>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}